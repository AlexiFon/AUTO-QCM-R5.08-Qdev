# .github/workflows/process_non_us_issues.yml
name: Process Non-User Story Issues

on:
  workflow_dispatch:

jobs:
  fetch_non_us_issues:
    runs-on: ubuntu-latest
    outputs:
      issue_numbers: ${{ steps.fetch_issues.outputs.issue_numbers }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Fetch non-user story issues
        id: fetch_issues
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Récupérer toutes les issues ouvertes, excluant les pull requests
          RESPONSE=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
                          -H "Accept: application/vnd.github.v3+json" \
                          "https://api.github.com/repos/${GITHUB_REPOSITORY}/issues?state=open&per_page=100")

          # Filtrer les issues qui ne sont pas des pull requests et qui n'ont pas le label 'user story'
          ISSUE_NUMBERS=$(echo "$RESPONSE" | jq '[.[] | select(.pull_request | not) | select((.labels | map(.name | ascii_downcase) | index("user story")) | not) | .number] | @json')

          echo "Non-User Story Issues: $ISSUE_NUMBERS"

          # Définir la sortie en utilisant GITHUB_OUTPUT
          echo "issue_numbers=$ISSUE_NUMBERS" >> $GITHUB_OUTPUT

#   call_auto_us_workflows:
#     needs: fetch_non_us_issues
#     if: ${{ fromJson(needs.fetch_non_us_issues.outputs.issue_numbers) != [] }}
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         issue_number: ${{ fromJson(needs.fetch_non_us_issues.outputs.issue_numbers) }}
#     steps:
#       - name: Call auto_us workflow
#         uses: peter-evans/workflow-dispatch@v1
#         with:
#           workflow: auto_us.yml
#           token: ${{ secrets.GITHUB_TOKEN }}
#           ref: main  # Remplacez par la branche appropriée si nécessaire
#           inputs: |
#             issue_number: ${{ matrix.issue_number }}
